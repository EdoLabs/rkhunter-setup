$ sudo apt install rkhunter -y

Open the configuration file /etc/rkhunter.conf, and make the changes as shown below.
$ sudo xed /etc/rkhunter.conf

UPDATE_MIRRORS=0 to UPDATE_MIRRORS=1
MIRRORS_MODE=1 to MIRRORS_MODE=0
WEB_CMD="/bin/false" to WEB_CMD=""

// ubuntu 20
SCRIPTWHITELIST=/usr/bin/egrep to SCRIPTWHITELIST=/bin/egrep
SCRIPTWHITELIST=/usr/bin/fgrep to SCRIPTWHITELIST=/bin/fgrep

$ xed /etc/default/rkhunter.conf

Enable regular scan and updates with cron
RKHunter script is installed under under cron.daily directory for regular scan and updates. the script is therefore executed everyday by Cron.

Edit the /etc/default/rkhunter.conf and make the following changes.

Enable rkhunter scan checks to run daily by setting the value of CRON_DAILY_RUN to “true”.

CRON_DAILY_RUN="true"

Set the value of CRON_DB_UPDATE to true to enable rkhunter weekly database updates.

CRON_DB_UPDATE="true"

Set the value of to APT_AUTOGEN to true to enable automatic database updates. This ensures that rkhunter --propupd is run automatically after software updates in order to reduce false positives.

APT_AUTOGEN="true"


After the changes above, check rkhunter for any configuration errors.
$ sudo rkhunter -C



Set the Security Baseline for your system
RKHhunter compares various current file properties of various commands within the system against those it has previously stored. To update rkhunter data file of stored values with the current values, run the rkhunter with --propupd option.

# sudo rkhunter --propupd

$ sudo rkhunter --versioncheck

$ sudo rkhunter --update

Quikly check system files.
$ sudo rkhunter --check

getting warnings as shown below 
/usr/bin/lwp-request     [ Warning ]
/bin/which               [ Warning ]

rkhunter needs to know what package manager you are using.

Create or edit /etc/rkhunter.conf.local and add the following line:

PKGMGR=DPKG
If you are not on Debian or Ubuntu, then change DPKG for your actual package manager.

This way, rkhunter will know to expect those executables to be scripts, and not flag the false positive.

It will ensure that if the files are tampered with, then a new positive result will show.


Confirm log result  details.

All results have been written to the log file: /var/log/rkhunter.log

One or more warnings have been found while checking the system.
Please check the log file (/var/log/rkhunter.log)

$ sudo xed /var/log/rkhunter.log

As you can see above, there are some warnings for example SSH root access is allowed. You can the remediate whatever the issue found on your system by rkhunter.

To avoid having to press ENTER for every check, you can pass the --sk or --skip-keypress option.

# rkhunter --check --sk
To display warning messages only, use the --rwo or --report-warnings-only option.

# rkhunter --check --rwo
RKHunter log file is:

/var/log/rkhunter.log
You also noticed that hidden files and directories warnings are given. To avoid these warnings, you can reconfigure rkhunter to ignore these files via whitelisting. For example in my test, i found this warning;


Warning: Hidden directory found: /etc/.java
To whitliest this file, open the rkhunter config file and uncomment the line #ALLOWHIDDENDIR=/etc/.java such that it looks like;


ALLOWHIDDENDIR=/etc/.java

If you got other files, you can uncomment them in the rkhunter configuration file as shown above.

Email Notifications
You may also want to send the results via Email in case a threat is found on your system. To do this, you need to edit rkhunter configuration file and set a value of MAIL-ON-WARNING to your email address.

# vim /etc/rkhunter.conf
MAIL-ON-WARNING=username@domain
Replace username@domain with your email address

You also set the email command to use.

MAIL_CMD=mail -s "[rkhunter] Warnings found for ${HOST_NAME}"
Once done, save the configuration file and check for any misconfigurations as shown above.

You can now be able to receive emails in case any threat is found on your system. See the example mail below.


